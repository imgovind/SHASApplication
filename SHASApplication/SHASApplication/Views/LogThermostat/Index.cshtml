@model IEnumerable<SHASApplication.Models.logsthermostat>
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Log Table | Thermostat";
}
@section HeadContent {
<style>
    #chart1 {
        background: center no-repeat url('@Url.Content("~/Content/Kendo/shared/world-map.png")');
        height: 430px;
    }
    #chart2 {
        background: center no-repeat url('@Url.Content("~/Content/Kendo/shared/world-map.png")');
        height: 430px;
    }
</style>
}
<p></p>
<h2>Chart #1 - Thermostat Usage Data</h2>
<p>
    This chart shows the usage data of the thermostat in comparison to the temperatures (Current Temperature vs Desired Temperature)
</p>
<div class="chart-wrapper">
    @(Html.Kendo().Chart(Model)
        .Name("chart1")
        .Title("Thermostat Usage Data")
        .Legend(legend => legend
            .Position(ChartLegendPosition.Bottom)
        )
        .ChartArea(chartArea => chartArea
            .Background("transparent")
        )
        .Series(series =>
        {
            series.Line(m => m.DesiredTemperature).Name("Desired Temperature");
            series.Line(m => m.CurrentTemperature).Name("Current Temperature");
        })
        .CategoryAxis(axis => axis
            .Categories(m => m.TimeStamp)
            .MajorGridLines(lines => lines.Visible(true))
        )
        .ValueAxis(axis => axis
            .Numeric()
            .Labels(labels => labels.Format("{0}F"))
            .AxisCrossingValue(-10)
            .Line(line => line.Visible(false))
        )
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Format("{0}F")
            .Template("#= series.name #: #= value #")
        )
    ) 
</div>
<hr />
<h2>Chart #2 - Device Status Vs Operating Mode Vs Energy Mode</h2>
<p>This chart shows the various operating modes (HOT(3), COLD(1), IDLE(2)) of the thermostat during the course of time, 
    and also the Device Status which is the Orange Area behind the two lines
    and also the Energy Mode (FULL MODE(3), REDUCED MODE(2), ECO MODE(1)).
</p>
<div class="chart-wrapper">
    @(Html.Kendo().Chart(Model)
        .Name("chart2")
        .Title("Device Status | Operating Mode")
        .Legend(legend => legend
            .Position(ChartLegendPosition.Bottom)
        )
        .Series(series => {
            series.Area(m => m.DeviceStatus).Name("Device Status");
            series.Line(m => m.OperatingMode).Name("Operating Mode");
            series.Line(m => m.EnergyMode).Name("Energy Mode");
        })
        .CategoryAxis(axis => axis
            .Categories(@ViewBag.TimeLineStampMoney)
        )
        .ValueAxis(axis => axis.Numeric()
            .Labels(labels => labels.Format("{0}"))
        )
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Format("{0}")
            .Template("#= series.name #: #= value #")
        )
    ) 
</div>

<hr />
<h2>Chart #3 - Energy Savings </h2>
<p>
    This chart shows the amount of energy saved pie, 
    which would have otherwise been spent if we did not use SHAS. 
    The full pie shows the energy that would have been spent without SHAS, 
    the energy saved pie shows the current savings of energy
</p>
<div class="chart-wrapper">
    @(Html.Kendo().Chart()
        .Name("chart3")
                .Title(title => title
                    .Text("Energy Savings")
                    .Position(ChartTitlePosition.Top))
        .Legend(legend => legend
            .Visible(false)
        )
        .Series(series => {
            series.Pie(new dynamic[] {
                new {category="Energy Spent",value=@ViewBag.eSpent,color="#9de219"},
                new {category="Energy Saved",value=@ViewBag.eSaved,color="#068c35"},
            })
            .Labels(labels => labels
                .Template("#= category #: #= value#kW")
                .Background("transparent")
                .Visible(true)
            )
            .StartAngle(150);
        })
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Format("{0}kW")
        )
    ) 
</div>
<hr />
<h2>Chart #4 - Energy Usage Split by Operating Mode</h2>
<p>
    This chart shows the split of energy used according to the three 
    operating modes (HOT COLD IDLE).
    The Inner Donut, shows the amount of time each operating mode ran on
    The Outer Donut, shows the amount of energy used for each operating mode.
</p>
<div class="chart-wrapper">
    @(Html.Kendo().Chart()
        .Name("chart4")
        .Title(title => title
            .Text("Energy Usage by Operating Mode")
            .Position(ChartTitlePosition.Top)
        )
        .Legend(legend => legend
            .Visible(false)
        )
        .SeriesDefaults(series =>
            series.Donut().StartAngle(150)
        )
        .Series(series =>
        {
            series.Donut(new dynamic[] {
                new {category = "HOT",value = @ViewBag.hotMM,color = "#90cc38"},
                new {category = "COLD",value = @ViewBag.coldMM,color = "#068c35"},
                new {category = "IDLE",value = @ViewBag.idleMM,color = "#004d38"},
            })
            .Name("Hours Operated");
            series.Donut(new dynamic[] {
                new {category = "HOT",value = @ViewBag.hotMU,color = "#9de219"},
                new {category = "COLD",value = @ViewBag.coldMU,color = "#006634"}                
            })
            .Name("PowerUsage")
            .Labels(labels => labels
                .Visible(true)
                .Position(ChartPieLabelsPosition.OutsideEnd)
                .Template("#= category #: #= value#kWH")
                .Background("transparent")
            );
        })
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Template("#= category # (#= series.name #): #= value #")
        )
    ) 
</div>
<hr />
<h2>Chart #5 - Energy Usage Split by Energy Mode</h2>
<p>
    This chart shows the split of energy used according to the Four 
    operating modes (FULL, REDUCED, ECO, IDLE).
    The Inner Donut, shows the amount of time each Energy mode ran on
    The Outer Donut, shows the amount of energy used for each Energy mode.
</p>
<div class="chart-wrapper">
    @(Html.Kendo().Chart()
        .Name("chart5")
        .Title(title => title
            .Text("Energy Usage by Energy Mode")
            .Position(ChartTitlePosition.Bottom)
        )
        .Legend(legend => legend
            .Visible(false)
        )
        .SeriesDefaults(series =>
            series.Donut().StartAngle(150)
        )
        .Series(series =>
        {
            series.Donut(new dynamic[] {
                new {category = "FULL",value = @ViewBag.fullMM, color="#FF1919"},
                new {category = "REDUCED",value = @ViewBag.halfMM, color = "#FF9900"},
                new {category = "ECO",value = @ViewBag.quartMM, color ="#33CC33"},
                new {category = "IDLE",value = @ViewBag.zeroMM, color = "#85ADAD"},
            })
            .Name("Hours Operated")
            ;
            series.Donut(new dynamic[] {
                new {category = "FULL",value = @ViewBag.fullMU, color="red"},
                new {category = "REDUCED",value = @ViewBag.halfMU, color = "orange"},
                new {category = "ECO",value = @ViewBag.quartMU, color ="green"},
                new {category = "IDLE",value = @ViewBag.zeroMU, color = "#85ADAD"}
            })
            .Name("PowerUsage")
            .Labels(labels => labels
                .Visible(true)
                .Position(ChartPieLabelsPosition.OutsideEnd)
                .Template("#= category #: #= value#kWH")
                .Background("transparent")
            );
        })
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Template("#= category # (#= series.name #): #= value #m")
        )
    ) 
</div>
<hr />
<h2>Chart #6 - Energy Usage split by Time</h2>
<p>
    This chart shows the energy usage by thermostat at a given point of time
</p>
<div class="chart-wrapper">
    @(Html.Kendo().Chart(Model)
        .Name("chart6")
        .Title("Energy Usage at given time")
        .Legend(legend => legend
            .Visible(false)
        )
        .ChartArea(chartArea => chartArea
            .Background("transparent")
        )
        .Series(series => {
            series.Bar(@ViewBag.GContainer).Name("Energy Usage");
        })
        .CategoryAxis(axis => axis
            .Categories(m => m.TimeStamp)
            .MajorGridLines(lines => lines.Visible(false))
        )
        .ValueAxis(axis => axis
            .Numeric()
            .Max(6)
            .Line(line => line.Visible(false))
            .MajorGridLines(lines => lines.Visible(true))
        )
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Template("#= series.name #: #= value #kwH")
        )
    ) 
</div>

<hr />
<h2>Chart #7 - Hours Operated by Operating Mode for each Energy Mode</h2>
<p>
    This chart shows how long each operating mode (HOT, COLD, IDLE) have operated
    in each energy mode (FULL, REDUCED, ECO, IDLE).
</p>
<div class="chart-wrapper">
    @(Html.Kendo().Chart()
        .Name("chart7")
        .Title(title => title
            .Text("Operating Mode vs Energy Mode (Hours Operated)")
            .Position(ChartTitlePosition.Top)
        )
        .Legend(legend => legend
            .Visible(false)
        )
        .SeriesDefaults(series =>
            series.Donut().StartAngle(150)
        )
        .Series(series =>
        {
            series.Donut(new dynamic[] {
                new {category = "IDLE | FULL",value = @ViewBag.idleFMM, color="#FF1919"},
                new {category = "IDLE | HALF",value = @ViewBag.idleHMM, color = "#FF9900"},
                new {category = "IDLE | QUART",value = @ViewBag.idleQMM, color ="#33CC33"},
                new {category = "IDLE | ZERO",value = @ViewBag.idleZMM, color = "#85ADAD"},
                
                
            })
            .Name("Hours Operated")
            ;
            series.Donut(new dynamic[] {
                new {category = "COLD | FULL",value = @ViewBag.coldFMM, color="#FF1919"},
                new {category = "COLD | HALF",value = @ViewBag.coldHMM, color = "#FF9900"},
                new {category = "COLD | QUART",value = @ViewBag.coldQMM, color ="#33CC33"},
                new {category = "COLD | ZERO",value = @ViewBag.coldZMM, color = "#85ADAD"},
                
            })
            .Name("Hours Operated")
            ;
            series.Donut(new dynamic[] {
                new {category = "HOT | FULL",value = @ViewBag.hotFMM, color="#FF1919"},
                new {category = "HOT | HALF",value = @ViewBag.hotHMM, color = "#FF9900"},
                new {category = "HOT | QUART",value = @ViewBag.hotQMM, color ="#33CC33"},
                new {category = "HOT | ZERO",value = @ViewBag.hotZMM, color = "#85ADAD"},
            })
            .Name("Hours Operated")
            .Labels(labels => labels
                .Visible(true)
                .Position(ChartPieLabelsPosition.OutsideEnd)
                .Template("#= category #: #= value#m")
                .Background("transparent")
            );
        })
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Template("#= category # (#= series.name #): #= value #m")
        )
    ) 
</div>
<hr />
<h2>Chart #8 - Energy used by Operating Mode for each Energy Mode</h2>
<p>
    This chart shows how much energy each operating mode (HOT, COLD, IDLE) used, while operating
    in each energy mode (FULL, REDUCED, ECO, IDLE).
</p>
<div class="chart-wrapper">
    @(Html.Kendo().Chart()
        .Name("chart8")
        .Title(title => title
            .Text("Operating Mode vs Energy Mode (Energy Used)")
            .Position(ChartTitlePosition.Top)
        )
        .Legend(legend => legend
            .Visible(false)
        )
        .SeriesDefaults(series =>
            series.Donut().StartAngle(150)
        )
        .Series(series =>
        {
            series.Donut(new dynamic[] {
                new {category = "HOT | FULL",value = @ViewBag.hotFMU, color="#FF1919"},
                new {category = "HOT | HALF",value = @ViewBag.hotHMU, color = "#FF9900"},
                new {category = "HOT | QUART",value = @ViewBag.hotQMU, color ="#33CC33"},
                new {category = "HOT | ZERO",value = @ViewBag.hotZMU, color = "#85ADAD"},
                
            })
            .Name("Energy Used")
            ;
            series.Donut(new dynamic[] {
                new {category = "COLD | FULL",value = @ViewBag.coldFMU, color="#FF1919"},
                new {category = "COLD | HALF",value = @ViewBag.coldHMU, color = "#FF9900"},
                new {category = "COLD | QUART",value = @ViewBag.coldQMU, color ="#33CC33"},
                new {category = "COLD | ZERO",value = @ViewBag.coldZMU, color = "#85ADAD"},
                
            })
            .Name("Energy Used")
            ;
            series.Donut(new dynamic[] {
                new {category = "IDLE | FULL",value = @ViewBag.idleFMU, color="#FF1919"},
                new {category = "IDLE | HALF",value = @ViewBag.idleHMU, color = "#FF9900"},
                new {category = "IDLE | QUART",value = @ViewBag.idleQMU, color ="#33CC33"},
                new {category = "IDLE | ZERO",value = @ViewBag.idleZMU, color = "#85ADAD"},
            })
            .Name("Energy Used")
            .Labels(labels => labels
                .Visible(true)
                .Position(ChartPieLabelsPosition.OutsideEnd)
                .Template("#= category #: #= value#kWH")
                .Background("transparent")
            );
        })
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Template("#= category # (#= series.name #): #= value #kWH")
        )
    ) 
</div>

<hr />
<h2>Raw Data - Thermostat</h2>
<div style="clear:both; float:left;">
    <table>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CurrentTemperature)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DesiredTemperature)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OperatingMode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeviceStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EnergyMode)
            </th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CurrentTemperature)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DesiredTemperature)
            </td>
            <td>
                @if (item.OperatingMode.Equals("1")) 
                { 
                 <label style="color:blue">COLD</label>
                } 
                else if (item.OperatingMode.Equals("2")) 
                { 
                <label style="color:green">IDLE</label>          
                } 
                else if (item.OperatingMode.Equals("3")) 
                { 
                <label style="color:red">HOT</label>        
                }
            </td>
            <td>
                @if (item.DeviceStatus.Equals("3")) 
                { 
                    <label style="color:red">ON</label>  
                } 
                else if (item.DeviceStatus.Equals("0")) 
                { 
                    <label style="color:green">OFF</label>             
                }
            </td>
            <td>
                @if (item.EnergyMode.Equals("3")) 
                { 
                 <label style="color:red">FULL CAPACITY</label>
                }
                else if (item.EnergyMode.Equals("2")) 
                { 
                <label style="color:orange">REDUCED CAPACITY</label>          
                }
                else if (item.EnergyMode.Equals("1")) 
                { 
                <label style="color:green">ECO MODE</label>        
                }
                else if (item.EnergyMode.Equals("0")) 
                { 
                <label style="color:gray">IDLE</label>        
                }
            </td>
            <td>
                <!--
                @Html.ActionLink("Edit", "Edit", new { id=item.ID }) 
                @Html.ActionLink("Details", "Details", new { id=item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.ID })
                -->
            </td>
        </tr>
    }

    </table>
</div>